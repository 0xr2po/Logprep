image: test-ci:latest


stages:
  - build
  - test

# Build pex with replaced project_location
build-pex:
  stage: build
  only:
    - /^dev-.*$/
    - /^fix-.*$/
    - master
  script:
    - ANSIBLE_STDOUT_CALLBACK=yaml ansible-playbook -b create_pex.yml --extra-vars "project_location=$PWD"
  artifacts:
    paths:
      - logprep.pex
    expire_in: 1 week

unit-tests:
  stage: test
  only:
    - /^dev-.*$/
    - master
  script:
    - tox -r -e unit

acceptance-tests:
  stage: test
  only:
    - /^dev-.*$/
    - master
  script:
    - tox -r -e acceptance

integration-tests:
  stage: test
  only:
    - /^dev-.*$/
    - master
  services:
    - kafka-service
  before_script:
    - TOPICS="wineventlog_raw wineventlog_labeled"
    - for TOPIC in $TOPICS; do /opt/kafka/bin/kafka-topics.sh --create --zookeeper kafka-service:2181 --replication-factor 1 --partitions 20 --topic $TOPIC; done
    - /opt/kafka/bin/kafka-console-producer.sh --broker-list kafka-service:9092 --topic wineventlog_raw < tests/testdata/input_logdata/wineventlog_raw.jsonl
    - pip3 install -r requirements_dev.txt
    - python3 -m logprep.run_logprep tests/testdata/config/config-docker.yml --disable-logging & PID=$!; sleep 10; kill $PID
    - OUTPUT="$(/opt/kafka/bin/kafka-console-consumer.sh --topic wineventlog_labeled --bootstrap-server kafka-service:9092 --from-beginning --timeout-ms 2000)"
    - echo $OUTPUT > tests/testdata/output.jsonl
    - cat tests/testdata/output.jsonl
    - OUTPUT_COUNT=$(echo "$OUTPUT" | wc -l)
  script:
    - if [[ $OUTPUT_COUNT == "838" ]]; then true; else false; fi;
    - python3 tests/ci/runner-image/scripts/compare_json.py
